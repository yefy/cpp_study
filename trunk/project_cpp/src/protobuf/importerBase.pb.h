// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: importerBase.proto

#ifndef PROTOBUF_INCLUDED_importerBase_2eproto
#define PROTOBUF_INCLUDED_importerBase_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_importerBase_2eproto 

namespace protobuf_importerBase_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_importerBase_2eproto
namespace importerBase {
class Person2;
class Person2DefaultTypeInternal;
extern Person2DefaultTypeInternal _Person2_default_instance_;
class Person2_PhoneNumber;
class Person2_PhoneNumberDefaultTypeInternal;
extern Person2_PhoneNumberDefaultTypeInternal _Person2_PhoneNumber_default_instance_;
}  // namespace importerBase
namespace google {
namespace protobuf {
template<> ::importerBase::Person2* Arena::CreateMaybeMessage<::importerBase::Person2>(Arena*);
template<> ::importerBase::Person2_PhoneNumber* Arena::CreateMaybeMessage<::importerBase::Person2_PhoneNumber>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace importerBase {

enum Person2_PhoneType {
  Person2_PhoneType_MOBILE = 0,
  Person2_PhoneType_HOME = 1,
  Person2_PhoneType_WORK = 2
};
bool Person2_PhoneType_IsValid(int value);
const Person2_PhoneType Person2_PhoneType_PhoneType_MIN = Person2_PhoneType_MOBILE;
const Person2_PhoneType Person2_PhoneType_PhoneType_MAX = Person2_PhoneType_WORK;
const int Person2_PhoneType_PhoneType_ARRAYSIZE = Person2_PhoneType_PhoneType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Person2_PhoneType_descriptor();
inline const ::std::string& Person2_PhoneType_Name(Person2_PhoneType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Person2_PhoneType_descriptor(), value);
}
inline bool Person2_PhoneType_Parse(
    const ::std::string& name, Person2_PhoneType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Person2_PhoneType>(
    Person2_PhoneType_descriptor(), name, value);
}
// ===================================================================

class Person2_PhoneNumber : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:importerBase.Person2.PhoneNumber) */ {
 public:
  Person2_PhoneNumber();
  virtual ~Person2_PhoneNumber();

  Person2_PhoneNumber(const Person2_PhoneNumber& from);

  inline Person2_PhoneNumber& operator=(const Person2_PhoneNumber& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Person2_PhoneNumber(Person2_PhoneNumber&& from) noexcept
    : Person2_PhoneNumber() {
    *this = ::std::move(from);
  }

  inline Person2_PhoneNumber& operator=(Person2_PhoneNumber&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Person2_PhoneNumber& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Person2_PhoneNumber* internal_default_instance() {
    return reinterpret_cast<const Person2_PhoneNumber*>(
               &_Person2_PhoneNumber_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Person2_PhoneNumber* other);
  friend void swap(Person2_PhoneNumber& a, Person2_PhoneNumber& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Person2_PhoneNumber* New() const final {
    return CreateMaybeMessage<Person2_PhoneNumber>(NULL);
  }

  Person2_PhoneNumber* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Person2_PhoneNumber>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Person2_PhoneNumber& from);
  void MergeFrom(const Person2_PhoneNumber& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Person2_PhoneNumber* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string number = 1;
  bool has_number() const;
  void clear_number();
  static const int kNumberFieldNumber = 1;
  const ::std::string& number() const;
  void set_number(const ::std::string& value);
  #if LANG_CXX11
  void set_number(::std::string&& value);
  #endif
  void set_number(const char* value);
  void set_number(const char* value, size_t size);
  ::std::string* mutable_number();
  ::std::string* release_number();
  void set_allocated_number(::std::string* number);

  // optional .importerBase.Person2.PhoneType type = 2 [default = HOME];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::importerBase::Person2_PhoneType type() const;
  void set_type(::importerBase::Person2_PhoneType value);

  // @@protoc_insertion_point(class_scope:importerBase.Person2.PhoneNumber)
 private:
  void set_has_number();
  void clear_has_number();
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr number_;
  int type_;
  friend struct ::protobuf_importerBase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Person2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:importerBase.Person2) */ {
 public:
  Person2();
  virtual ~Person2();

  Person2(const Person2& from);

  inline Person2& operator=(const Person2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Person2(Person2&& from) noexcept
    : Person2() {
    *this = ::std::move(from);
  }

  inline Person2& operator=(Person2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Person2& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Person2* internal_default_instance() {
    return reinterpret_cast<const Person2*>(
               &_Person2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Person2* other);
  friend void swap(Person2& a, Person2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Person2* New() const final {
    return CreateMaybeMessage<Person2>(NULL);
  }

  Person2* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Person2>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Person2& from);
  void MergeFrom(const Person2& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Person2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Person2_PhoneNumber PhoneNumber;

  typedef Person2_PhoneType PhoneType;
  static const PhoneType MOBILE =
    Person2_PhoneType_MOBILE;
  static const PhoneType HOME =
    Person2_PhoneType_HOME;
  static const PhoneType WORK =
    Person2_PhoneType_WORK;
  static inline bool PhoneType_IsValid(int value) {
    return Person2_PhoneType_IsValid(value);
  }
  static const PhoneType PhoneType_MIN =
    Person2_PhoneType_PhoneType_MIN;
  static const PhoneType PhoneType_MAX =
    Person2_PhoneType_PhoneType_MAX;
  static const int PhoneType_ARRAYSIZE =
    Person2_PhoneType_PhoneType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PhoneType_descriptor() {
    return Person2_PhoneType_descriptor();
  }
  static inline const ::std::string& PhoneType_Name(PhoneType value) {
    return Person2_PhoneType_Name(value);
  }
  static inline bool PhoneType_Parse(const ::std::string& name,
      PhoneType* value) {
    return Person2_PhoneType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .importerBase.Person2.PhoneNumber phone = 4;
  int phone_size() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 4;
  ::importerBase::Person2_PhoneNumber* mutable_phone(int index);
  ::google::protobuf::RepeatedPtrField< ::importerBase::Person2_PhoneNumber >*
      mutable_phone();
  const ::importerBase::Person2_PhoneNumber& phone(int index) const;
  ::importerBase::Person2_PhoneNumber* add_phone();
  const ::google::protobuf::RepeatedPtrField< ::importerBase::Person2_PhoneNumber >&
      phone() const;

  // repeated string string_arg5 = 5;
  int string_arg5_size() const;
  void clear_string_arg5();
  static const int kStringArg5FieldNumber = 5;
  const ::std::string& string_arg5(int index) const;
  ::std::string* mutable_string_arg5(int index);
  void set_string_arg5(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_string_arg5(int index, ::std::string&& value);
  #endif
  void set_string_arg5(int index, const char* value);
  void set_string_arg5(int index, const char* value, size_t size);
  ::std::string* add_string_arg5();
  void add_string_arg5(const ::std::string& value);
  #if LANG_CXX11
  void add_string_arg5(::std::string&& value);
  #endif
  void add_string_arg5(const char* value);
  void add_string_arg5(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& string_arg5() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_string_arg5();

  // repeated int32 int32_arg6 = 6;
  int int32_arg6_size() const;
  void clear_int32_arg6();
  static const int kInt32Arg6FieldNumber = 6;
  ::google::protobuf::int32 int32_arg6(int index) const;
  void set_int32_arg6(int index, ::google::protobuf::int32 value);
  void add_int32_arg6(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      int32_arg6() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_int32_arg6();

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string email = 3;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 3;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // required int32 age = 2;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 2;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // optional uint32 uint32_arg7 = 7;
  bool has_uint32_arg7() const;
  void clear_uint32_arg7();
  static const int kUint32Arg7FieldNumber = 7;
  ::google::protobuf::uint32 uint32_arg7() const;
  void set_uint32_arg7(::google::protobuf::uint32 value);

  // optional int64 int64_arg8 = 8;
  bool has_int64_arg8() const;
  void clear_int64_arg8();
  static const int kInt64Arg8FieldNumber = 8;
  ::google::protobuf::int64 int64_arg8() const;
  void set_int64_arg8(::google::protobuf::int64 value);

  // optional uint64 uint64_arg9 = 9;
  bool has_uint64_arg9() const;
  void clear_uint64_arg9();
  static const int kUint64Arg9FieldNumber = 9;
  ::google::protobuf::uint64 uint64_arg9() const;
  void set_uint64_arg9(::google::protobuf::uint64 value);

  // optional double double_arg10 = 10;
  bool has_double_arg10() const;
  void clear_double_arg10();
  static const int kDoubleArg10FieldNumber = 10;
  double double_arg10() const;
  void set_double_arg10(double value);

  // optional float float_arg11 = 11;
  bool has_float_arg11() const;
  void clear_float_arg11();
  static const int kFloatArg11FieldNumber = 11;
  float float_arg11() const;
  void set_float_arg11(float value);

  // optional bool bool_arg12 = 12;
  bool has_bool_arg12() const;
  void clear_bool_arg12();
  static const int kBoolArg12FieldNumber = 12;
  bool bool_arg12() const;
  void set_bool_arg12(bool value);

  // @@protoc_insertion_point(class_scope:importerBase.Person2)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_age();
  void clear_has_age();
  void set_has_email();
  void clear_has_email();
  void set_has_uint32_arg7();
  void clear_has_uint32_arg7();
  void set_has_int64_arg8();
  void clear_has_int64_arg8();
  void set_has_uint64_arg9();
  void clear_has_uint64_arg9();
  void set_has_double_arg10();
  void clear_has_double_arg10();
  void set_has_float_arg11();
  void clear_has_float_arg11();
  void set_has_bool_arg12();
  void clear_has_bool_arg12();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::importerBase::Person2_PhoneNumber > phone_;
  ::google::protobuf::RepeatedPtrField< ::std::string> string_arg5_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > int32_arg6_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::int32 age_;
  ::google::protobuf::uint32 uint32_arg7_;
  ::google::protobuf::int64 int64_arg8_;
  ::google::protobuf::uint64 uint64_arg9_;
  double double_arg10_;
  float float_arg11_;
  bool bool_arg12_;
  friend struct ::protobuf_importerBase_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Person2_PhoneNumber

// required string number = 1;
inline bool Person2_PhoneNumber::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Person2_PhoneNumber::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Person2_PhoneNumber::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Person2_PhoneNumber::clear_number() {
  number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_number();
}
inline const ::std::string& Person2_PhoneNumber::number() const {
  // @@protoc_insertion_point(field_get:importerBase.Person2.PhoneNumber.number)
  return number_.GetNoArena();
}
inline void Person2_PhoneNumber::set_number(const ::std::string& value) {
  set_has_number();
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:importerBase.Person2.PhoneNumber.number)
}
#if LANG_CXX11
inline void Person2_PhoneNumber::set_number(::std::string&& value) {
  set_has_number();
  number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:importerBase.Person2.PhoneNumber.number)
}
#endif
inline void Person2_PhoneNumber::set_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_number();
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:importerBase.Person2.PhoneNumber.number)
}
inline void Person2_PhoneNumber::set_number(const char* value, size_t size) {
  set_has_number();
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:importerBase.Person2.PhoneNumber.number)
}
inline ::std::string* Person2_PhoneNumber::mutable_number() {
  set_has_number();
  // @@protoc_insertion_point(field_mutable:importerBase.Person2.PhoneNumber.number)
  return number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Person2_PhoneNumber::release_number() {
  // @@protoc_insertion_point(field_release:importerBase.Person2.PhoneNumber.number)
  if (!has_number()) {
    return NULL;
  }
  clear_has_number();
  return number_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Person2_PhoneNumber::set_allocated_number(::std::string* number) {
  if (number != NULL) {
    set_has_number();
  } else {
    clear_has_number();
  }
  number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), number);
  // @@protoc_insertion_point(field_set_allocated:importerBase.Person2.PhoneNumber.number)
}

// optional .importerBase.Person2.PhoneType type = 2 [default = HOME];
inline bool Person2_PhoneNumber::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Person2_PhoneNumber::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Person2_PhoneNumber::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Person2_PhoneNumber::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::importerBase::Person2_PhoneType Person2_PhoneNumber::type() const {
  // @@protoc_insertion_point(field_get:importerBase.Person2.PhoneNumber.type)
  return static_cast< ::importerBase::Person2_PhoneType >(type_);
}
inline void Person2_PhoneNumber::set_type(::importerBase::Person2_PhoneType value) {
  assert(::importerBase::Person2_PhoneType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:importerBase.Person2.PhoneNumber.type)
}

// -------------------------------------------------------------------

// Person2

// required string name = 1;
inline bool Person2::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Person2::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Person2::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Person2::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Person2::name() const {
  // @@protoc_insertion_point(field_get:importerBase.Person2.name)
  return name_.GetNoArena();
}
inline void Person2::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:importerBase.Person2.name)
}
#if LANG_CXX11
inline void Person2::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:importerBase.Person2.name)
}
#endif
inline void Person2::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:importerBase.Person2.name)
}
inline void Person2::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:importerBase.Person2.name)
}
inline ::std::string* Person2::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:importerBase.Person2.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Person2::release_name() {
  // @@protoc_insertion_point(field_release:importerBase.Person2.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Person2::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:importerBase.Person2.name)
}

// required int32 age = 2;
inline bool Person2::has_age() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Person2::set_has_age() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Person2::clear_has_age() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Person2::clear_age() {
  age_ = 0;
  clear_has_age();
}
inline ::google::protobuf::int32 Person2::age() const {
  // @@protoc_insertion_point(field_get:importerBase.Person2.age)
  return age_;
}
inline void Person2::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:importerBase.Person2.age)
}

// optional string email = 3;
inline bool Person2::has_email() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Person2::set_has_email() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Person2::clear_has_email() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Person2::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& Person2::email() const {
  // @@protoc_insertion_point(field_get:importerBase.Person2.email)
  return email_.GetNoArena();
}
inline void Person2::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:importerBase.Person2.email)
}
#if LANG_CXX11
inline void Person2::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:importerBase.Person2.email)
}
#endif
inline void Person2::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:importerBase.Person2.email)
}
inline void Person2::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:importerBase.Person2.email)
}
inline ::std::string* Person2::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:importerBase.Person2.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Person2::release_email() {
  // @@protoc_insertion_point(field_release:importerBase.Person2.email)
  if (!has_email()) {
    return NULL;
  }
  clear_has_email();
  return email_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Person2::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:importerBase.Person2.email)
}

// repeated .importerBase.Person2.PhoneNumber phone = 4;
inline int Person2::phone_size() const {
  return phone_.size();
}
inline void Person2::clear_phone() {
  phone_.Clear();
}
inline ::importerBase::Person2_PhoneNumber* Person2::mutable_phone(int index) {
  // @@protoc_insertion_point(field_mutable:importerBase.Person2.phone)
  return phone_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::importerBase::Person2_PhoneNumber >*
Person2::mutable_phone() {
  // @@protoc_insertion_point(field_mutable_list:importerBase.Person2.phone)
  return &phone_;
}
inline const ::importerBase::Person2_PhoneNumber& Person2::phone(int index) const {
  // @@protoc_insertion_point(field_get:importerBase.Person2.phone)
  return phone_.Get(index);
}
inline ::importerBase::Person2_PhoneNumber* Person2::add_phone() {
  // @@protoc_insertion_point(field_add:importerBase.Person2.phone)
  return phone_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::importerBase::Person2_PhoneNumber >&
Person2::phone() const {
  // @@protoc_insertion_point(field_list:importerBase.Person2.phone)
  return phone_;
}

// repeated string string_arg5 = 5;
inline int Person2::string_arg5_size() const {
  return string_arg5_.size();
}
inline void Person2::clear_string_arg5() {
  string_arg5_.Clear();
}
inline const ::std::string& Person2::string_arg5(int index) const {
  // @@protoc_insertion_point(field_get:importerBase.Person2.string_arg5)
  return string_arg5_.Get(index);
}
inline ::std::string* Person2::mutable_string_arg5(int index) {
  // @@protoc_insertion_point(field_mutable:importerBase.Person2.string_arg5)
  return string_arg5_.Mutable(index);
}
inline void Person2::set_string_arg5(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:importerBase.Person2.string_arg5)
  string_arg5_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Person2::set_string_arg5(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:importerBase.Person2.string_arg5)
  string_arg5_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Person2::set_string_arg5(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  string_arg5_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:importerBase.Person2.string_arg5)
}
inline void Person2::set_string_arg5(int index, const char* value, size_t size) {
  string_arg5_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:importerBase.Person2.string_arg5)
}
inline ::std::string* Person2::add_string_arg5() {
  // @@protoc_insertion_point(field_add_mutable:importerBase.Person2.string_arg5)
  return string_arg5_.Add();
}
inline void Person2::add_string_arg5(const ::std::string& value) {
  string_arg5_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:importerBase.Person2.string_arg5)
}
#if LANG_CXX11
inline void Person2::add_string_arg5(::std::string&& value) {
  string_arg5_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:importerBase.Person2.string_arg5)
}
#endif
inline void Person2::add_string_arg5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  string_arg5_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:importerBase.Person2.string_arg5)
}
inline void Person2::add_string_arg5(const char* value, size_t size) {
  string_arg5_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:importerBase.Person2.string_arg5)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Person2::string_arg5() const {
  // @@protoc_insertion_point(field_list:importerBase.Person2.string_arg5)
  return string_arg5_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Person2::mutable_string_arg5() {
  // @@protoc_insertion_point(field_mutable_list:importerBase.Person2.string_arg5)
  return &string_arg5_;
}

// repeated int32 int32_arg6 = 6;
inline int Person2::int32_arg6_size() const {
  return int32_arg6_.size();
}
inline void Person2::clear_int32_arg6() {
  int32_arg6_.Clear();
}
inline ::google::protobuf::int32 Person2::int32_arg6(int index) const {
  // @@protoc_insertion_point(field_get:importerBase.Person2.int32_arg6)
  return int32_arg6_.Get(index);
}
inline void Person2::set_int32_arg6(int index, ::google::protobuf::int32 value) {
  int32_arg6_.Set(index, value);
  // @@protoc_insertion_point(field_set:importerBase.Person2.int32_arg6)
}
inline void Person2::add_int32_arg6(::google::protobuf::int32 value) {
  int32_arg6_.Add(value);
  // @@protoc_insertion_point(field_add:importerBase.Person2.int32_arg6)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Person2::int32_arg6() const {
  // @@protoc_insertion_point(field_list:importerBase.Person2.int32_arg6)
  return int32_arg6_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Person2::mutable_int32_arg6() {
  // @@protoc_insertion_point(field_mutable_list:importerBase.Person2.int32_arg6)
  return &int32_arg6_;
}

// optional uint32 uint32_arg7 = 7;
inline bool Person2::has_uint32_arg7() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Person2::set_has_uint32_arg7() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Person2::clear_has_uint32_arg7() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Person2::clear_uint32_arg7() {
  uint32_arg7_ = 0u;
  clear_has_uint32_arg7();
}
inline ::google::protobuf::uint32 Person2::uint32_arg7() const {
  // @@protoc_insertion_point(field_get:importerBase.Person2.uint32_arg7)
  return uint32_arg7_;
}
inline void Person2::set_uint32_arg7(::google::protobuf::uint32 value) {
  set_has_uint32_arg7();
  uint32_arg7_ = value;
  // @@protoc_insertion_point(field_set:importerBase.Person2.uint32_arg7)
}

// optional int64 int64_arg8 = 8;
inline bool Person2::has_int64_arg8() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Person2::set_has_int64_arg8() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Person2::clear_has_int64_arg8() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Person2::clear_int64_arg8() {
  int64_arg8_ = GOOGLE_LONGLONG(0);
  clear_has_int64_arg8();
}
inline ::google::protobuf::int64 Person2::int64_arg8() const {
  // @@protoc_insertion_point(field_get:importerBase.Person2.int64_arg8)
  return int64_arg8_;
}
inline void Person2::set_int64_arg8(::google::protobuf::int64 value) {
  set_has_int64_arg8();
  int64_arg8_ = value;
  // @@protoc_insertion_point(field_set:importerBase.Person2.int64_arg8)
}

// optional uint64 uint64_arg9 = 9;
inline bool Person2::has_uint64_arg9() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Person2::set_has_uint64_arg9() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Person2::clear_has_uint64_arg9() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Person2::clear_uint64_arg9() {
  uint64_arg9_ = GOOGLE_ULONGLONG(0);
  clear_has_uint64_arg9();
}
inline ::google::protobuf::uint64 Person2::uint64_arg9() const {
  // @@protoc_insertion_point(field_get:importerBase.Person2.uint64_arg9)
  return uint64_arg9_;
}
inline void Person2::set_uint64_arg9(::google::protobuf::uint64 value) {
  set_has_uint64_arg9();
  uint64_arg9_ = value;
  // @@protoc_insertion_point(field_set:importerBase.Person2.uint64_arg9)
}

// optional double double_arg10 = 10;
inline bool Person2::has_double_arg10() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Person2::set_has_double_arg10() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Person2::clear_has_double_arg10() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Person2::clear_double_arg10() {
  double_arg10_ = 0;
  clear_has_double_arg10();
}
inline double Person2::double_arg10() const {
  // @@protoc_insertion_point(field_get:importerBase.Person2.double_arg10)
  return double_arg10_;
}
inline void Person2::set_double_arg10(double value) {
  set_has_double_arg10();
  double_arg10_ = value;
  // @@protoc_insertion_point(field_set:importerBase.Person2.double_arg10)
}

// optional float float_arg11 = 11;
inline bool Person2::has_float_arg11() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Person2::set_has_float_arg11() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Person2::clear_has_float_arg11() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Person2::clear_float_arg11() {
  float_arg11_ = 0;
  clear_has_float_arg11();
}
inline float Person2::float_arg11() const {
  // @@protoc_insertion_point(field_get:importerBase.Person2.float_arg11)
  return float_arg11_;
}
inline void Person2::set_float_arg11(float value) {
  set_has_float_arg11();
  float_arg11_ = value;
  // @@protoc_insertion_point(field_set:importerBase.Person2.float_arg11)
}

// optional bool bool_arg12 = 12;
inline bool Person2::has_bool_arg12() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Person2::set_has_bool_arg12() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Person2::clear_has_bool_arg12() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Person2::clear_bool_arg12() {
  bool_arg12_ = false;
  clear_has_bool_arg12();
}
inline bool Person2::bool_arg12() const {
  // @@protoc_insertion_point(field_get:importerBase.Person2.bool_arg12)
  return bool_arg12_;
}
inline void Person2::set_bool_arg12(bool value) {
  set_has_bool_arg12();
  bool_arg12_ = value;
  // @@protoc_insertion_point(field_set:importerBase.Person2.bool_arg12)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace importerBase

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::importerBase::Person2_PhoneType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::importerBase::Person2_PhoneType>() {
  return ::importerBase::Person2_PhoneType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_importerBase_2eproto

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: importer.proto

#ifndef PROTOBUF_INCLUDED_importer_2eproto
#define PROTOBUF_INCLUDED_importer_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "importerBase.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_importer_2eproto 

namespace protobuf_importer_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_importer_2eproto
namespace importer {
class AddressBook2;
class AddressBook2DefaultTypeInternal;
extern AddressBook2DefaultTypeInternal _AddressBook2_default_instance_;
}  // namespace importer
namespace google {
namespace protobuf {
template<> ::importer::AddressBook2* Arena::CreateMaybeMessage<::importer::AddressBook2>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace importer {

// ===================================================================

class AddressBook2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:importer.AddressBook2) */ {
 public:
  AddressBook2();
  virtual ~AddressBook2();

  AddressBook2(const AddressBook2& from);

  inline AddressBook2& operator=(const AddressBook2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddressBook2(AddressBook2&& from) noexcept
    : AddressBook2() {
    *this = ::std::move(from);
  }

  inline AddressBook2& operator=(AddressBook2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddressBook2& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddressBook2* internal_default_instance() {
    return reinterpret_cast<const AddressBook2*>(
               &_AddressBook2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AddressBook2* other);
  friend void swap(AddressBook2& a, AddressBook2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddressBook2* New() const final {
    return CreateMaybeMessage<AddressBook2>(NULL);
  }

  AddressBook2* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddressBook2>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddressBook2& from);
  void MergeFrom(const AddressBook2& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddressBook2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .importerBase.Person2 people = 1;
  int people_size() const;
  void clear_people();
  static const int kPeopleFieldNumber = 1;
  ::importerBase::Person2* mutable_people(int index);
  ::google::protobuf::RepeatedPtrField< ::importerBase::Person2 >*
      mutable_people();
  const ::importerBase::Person2& people(int index) const;
  ::importerBase::Person2* add_people();
  const ::google::protobuf::RepeatedPtrField< ::importerBase::Person2 >&
      people() const;

  // repeated string t1 = 2;
  int t1_size() const;
  void clear_t1();
  static const int kT1FieldNumber = 2;
  const ::std::string& t1(int index) const;
  ::std::string* mutable_t1(int index);
  void set_t1(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_t1(int index, ::std::string&& value);
  #endif
  void set_t1(int index, const char* value);
  void set_t1(int index, const char* value, size_t size);
  ::std::string* add_t1();
  void add_t1(const ::std::string& value);
  #if LANG_CXX11
  void add_t1(::std::string&& value);
  #endif
  void add_t1(const char* value);
  void add_t1(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& t1() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_t1();

  // repeated int32 t2 = 3;
  int t2_size() const;
  void clear_t2();
  static const int kT2FieldNumber = 3;
  ::google::protobuf::int32 t2(int index) const;
  void set_t2(int index, ::google::protobuf::int32 value);
  void add_t2(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      t2() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_t2();

  // optional string book_name = 4;
  bool has_book_name() const;
  void clear_book_name();
  static const int kBookNameFieldNumber = 4;
  const ::std::string& book_name() const;
  void set_book_name(const ::std::string& value);
  #if LANG_CXX11
  void set_book_name(::std::string&& value);
  #endif
  void set_book_name(const char* value);
  void set_book_name(const char* value, size_t size);
  ::std::string* mutable_book_name();
  ::std::string* release_book_name();
  void set_allocated_book_name(::std::string* book_name);

  // optional .importerBase.Person2 people_once = 5;
  bool has_people_once() const;
  void clear_people_once();
  static const int kPeopleOnceFieldNumber = 5;
  private:
  const ::importerBase::Person2& _internal_people_once() const;
  public:
  const ::importerBase::Person2& people_once() const;
  ::importerBase::Person2* release_people_once();
  ::importerBase::Person2* mutable_people_once();
  void set_allocated_people_once(::importerBase::Person2* people_once);

  // @@protoc_insertion_point(class_scope:importer.AddressBook2)
 private:
  void set_has_book_name();
  void clear_has_book_name();
  void set_has_people_once();
  void clear_has_people_once();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::importerBase::Person2 > people_;
  ::google::protobuf::RepeatedPtrField< ::std::string> t1_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > t2_;
  ::google::protobuf::internal::ArenaStringPtr book_name_;
  ::importerBase::Person2* people_once_;
  friend struct ::protobuf_importer_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AddressBook2

// repeated .importerBase.Person2 people = 1;
inline int AddressBook2::people_size() const {
  return people_.size();
}
inline ::importerBase::Person2* AddressBook2::mutable_people(int index) {
  // @@protoc_insertion_point(field_mutable:importer.AddressBook2.people)
  return people_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::importerBase::Person2 >*
AddressBook2::mutable_people() {
  // @@protoc_insertion_point(field_mutable_list:importer.AddressBook2.people)
  return &people_;
}
inline const ::importerBase::Person2& AddressBook2::people(int index) const {
  // @@protoc_insertion_point(field_get:importer.AddressBook2.people)
  return people_.Get(index);
}
inline ::importerBase::Person2* AddressBook2::add_people() {
  // @@protoc_insertion_point(field_add:importer.AddressBook2.people)
  return people_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::importerBase::Person2 >&
AddressBook2::people() const {
  // @@protoc_insertion_point(field_list:importer.AddressBook2.people)
  return people_;
}

// repeated string t1 = 2;
inline int AddressBook2::t1_size() const {
  return t1_.size();
}
inline void AddressBook2::clear_t1() {
  t1_.Clear();
}
inline const ::std::string& AddressBook2::t1(int index) const {
  // @@protoc_insertion_point(field_get:importer.AddressBook2.t1)
  return t1_.Get(index);
}
inline ::std::string* AddressBook2::mutable_t1(int index) {
  // @@protoc_insertion_point(field_mutable:importer.AddressBook2.t1)
  return t1_.Mutable(index);
}
inline void AddressBook2::set_t1(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:importer.AddressBook2.t1)
  t1_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void AddressBook2::set_t1(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:importer.AddressBook2.t1)
  t1_.Mutable(index)->assign(std::move(value));
}
#endif
inline void AddressBook2::set_t1(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  t1_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:importer.AddressBook2.t1)
}
inline void AddressBook2::set_t1(int index, const char* value, size_t size) {
  t1_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:importer.AddressBook2.t1)
}
inline ::std::string* AddressBook2::add_t1() {
  // @@protoc_insertion_point(field_add_mutable:importer.AddressBook2.t1)
  return t1_.Add();
}
inline void AddressBook2::add_t1(const ::std::string& value) {
  t1_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:importer.AddressBook2.t1)
}
#if LANG_CXX11
inline void AddressBook2::add_t1(::std::string&& value) {
  t1_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:importer.AddressBook2.t1)
}
#endif
inline void AddressBook2::add_t1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  t1_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:importer.AddressBook2.t1)
}
inline void AddressBook2::add_t1(const char* value, size_t size) {
  t1_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:importer.AddressBook2.t1)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AddressBook2::t1() const {
  // @@protoc_insertion_point(field_list:importer.AddressBook2.t1)
  return t1_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AddressBook2::mutable_t1() {
  // @@protoc_insertion_point(field_mutable_list:importer.AddressBook2.t1)
  return &t1_;
}

// repeated int32 t2 = 3;
inline int AddressBook2::t2_size() const {
  return t2_.size();
}
inline void AddressBook2::clear_t2() {
  t2_.Clear();
}
inline ::google::protobuf::int32 AddressBook2::t2(int index) const {
  // @@protoc_insertion_point(field_get:importer.AddressBook2.t2)
  return t2_.Get(index);
}
inline void AddressBook2::set_t2(int index, ::google::protobuf::int32 value) {
  t2_.Set(index, value);
  // @@protoc_insertion_point(field_set:importer.AddressBook2.t2)
}
inline void AddressBook2::add_t2(::google::protobuf::int32 value) {
  t2_.Add(value);
  // @@protoc_insertion_point(field_add:importer.AddressBook2.t2)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AddressBook2::t2() const {
  // @@protoc_insertion_point(field_list:importer.AddressBook2.t2)
  return t2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AddressBook2::mutable_t2() {
  // @@protoc_insertion_point(field_mutable_list:importer.AddressBook2.t2)
  return &t2_;
}

// optional string book_name = 4;
inline bool AddressBook2::has_book_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddressBook2::set_has_book_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddressBook2::clear_has_book_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddressBook2::clear_book_name() {
  book_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_book_name();
}
inline const ::std::string& AddressBook2::book_name() const {
  // @@protoc_insertion_point(field_get:importer.AddressBook2.book_name)
  return book_name_.GetNoArena();
}
inline void AddressBook2::set_book_name(const ::std::string& value) {
  set_has_book_name();
  book_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:importer.AddressBook2.book_name)
}
#if LANG_CXX11
inline void AddressBook2::set_book_name(::std::string&& value) {
  set_has_book_name();
  book_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:importer.AddressBook2.book_name)
}
#endif
inline void AddressBook2::set_book_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_book_name();
  book_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:importer.AddressBook2.book_name)
}
inline void AddressBook2::set_book_name(const char* value, size_t size) {
  set_has_book_name();
  book_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:importer.AddressBook2.book_name)
}
inline ::std::string* AddressBook2::mutable_book_name() {
  set_has_book_name();
  // @@protoc_insertion_point(field_mutable:importer.AddressBook2.book_name)
  return book_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddressBook2::release_book_name() {
  // @@protoc_insertion_point(field_release:importer.AddressBook2.book_name)
  if (!has_book_name()) {
    return NULL;
  }
  clear_has_book_name();
  return book_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddressBook2::set_allocated_book_name(::std::string* book_name) {
  if (book_name != NULL) {
    set_has_book_name();
  } else {
    clear_has_book_name();
  }
  book_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), book_name);
  // @@protoc_insertion_point(field_set_allocated:importer.AddressBook2.book_name)
}

// optional .importerBase.Person2 people_once = 5;
inline bool AddressBook2::has_people_once() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddressBook2::set_has_people_once() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddressBook2::clear_has_people_once() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::importerBase::Person2& AddressBook2::_internal_people_once() const {
  return *people_once_;
}
inline const ::importerBase::Person2& AddressBook2::people_once() const {
  const ::importerBase::Person2* p = people_once_;
  // @@protoc_insertion_point(field_get:importer.AddressBook2.people_once)
  return p != NULL ? *p : *reinterpret_cast<const ::importerBase::Person2*>(
      &::importerBase::_Person2_default_instance_);
}
inline ::importerBase::Person2* AddressBook2::release_people_once() {
  // @@protoc_insertion_point(field_release:importer.AddressBook2.people_once)
  clear_has_people_once();
  ::importerBase::Person2* temp = people_once_;
  people_once_ = NULL;
  return temp;
}
inline ::importerBase::Person2* AddressBook2::mutable_people_once() {
  set_has_people_once();
  if (people_once_ == NULL) {
    auto* p = CreateMaybeMessage<::importerBase::Person2>(GetArenaNoVirtual());
    people_once_ = p;
  }
  // @@protoc_insertion_point(field_mutable:importer.AddressBook2.people_once)
  return people_once_;
}
inline void AddressBook2::set_allocated_people_once(::importerBase::Person2* people_once) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(people_once_);
  }
  if (people_once) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      people_once = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, people_once, submessage_arena);
    }
    set_has_people_once();
  } else {
    clear_has_people_once();
  }
  people_once_ = people_once;
  // @@protoc_insertion_point(field_set_allocated:importer.AddressBook2.people_once)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace importer

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_importer_2eproto
